Jenkins Tools
Pre requisite:
Java
Installation of Jenkins
Download Jenkins.war (https://jenkins-ci.org/) or setup file if you have admin permission on your computer)
Copy to Jenkins folder and add this to your path.
Run Jenkins
java –jar Jenkins.war

Plugins
Installation of required plugin to run PHP projects
Source: http://jenkins-php.org/installation.html 
We require following plugin to run PHP projects;
•	Checkstyle (for processing PHP_CodeSniffer logfiles in Checkstyle format)
•	Clover PHP (for processing PHPUnit's Clover XML logfile)
•	Crap4J (for processing PHPUnit's Crap4J XML logfile)
•	DRY (for processing phpcpd logfiles in PMD-CPD format)
•	HTML Publisher (for publishing documentation generated by phpDox, for instance)
•	JDepend (for processing PHP_Depend logfiles in JDepend format)
•	Plot (for processing phploc CSV output)
•	PMD (for processing PHPMD logfiles in PMD format)
•	Violations (for processing various logfiles)
•	Warnings (for processing PHP compiler warnings in the console log)
•	xUnit (for processing PHPUnit's JUnit XML logfile)
There are two ways to install plugin. 
1.	From Jenkins UI
a.	Run jenkin server (java –jar Jenkins.war)
b.	Open http://localhost:8080
c.	Go to Manage Jenkins > Manage Plugins
d.	Go to Available and search for each plugins and install
2.	From Jenkins CLI
a.	Download Jenkins CLI (http://localhost:8080/jnlpJars/jenkins-cli.jar)
b.	Run 
-	java -jar jenkins-cli.jar -s http://localhost:8080 install-plugin checkstyle cloverphp crap4j dry htmlpublisher jdepend plot pmd violations warnings xunit
c.	Restart Jenkin
-	java -jar jenkins-cli.jar -s http://localhost:8080 safe-restart

Manage Jenkins
-	Jenkins url to ip:8080 from localhost:8080
-	Git Web Hook – Manually manage hook URLs
	
Setting Up Projects
From main screen, click New Item
Select Freestyle Project and click OK. Will go to configure
Enter Project name.
Click on Adavanced button on Advanced Project Options. Select custom workspace and enter your desired directory and name.
Click Apply and Save.
On selected workspace Create build.xml file with required services on workspace.
	Ex:  
Configure Project
Go to Project > Configure
Enable project-based security
-	Add new user GitHub and allow Read and build Feature
-	Add GitHub project to url of github like https://github.medforce.local/sshrestha/unified_2008_int/
-	Use Git as Source Code Management
o	Add SSH repository URL
o	Add credential
o	Add Branch to build (for branch specific)
-	Buld Triggers – Build when a change is pushed to GitHub
-	Build – Invoke Ant 
o	Targets build
-	

-	



